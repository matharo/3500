Studio 11

1. Tanmayi Nagasuri and Alex Lambrecht

2. pthread_mutex_t mutex1 = PTHREAD_MUTEX_INITIALIZER;

3. 

4. If I synchronize the accesses, then it should be the same number for both threads. The numeric value can still be a random number 
below however many iterations were specified but it will be the same for both threads. The program might take slightly longer to run.

5. 
49158266
49158266

-85780022
-85780022

-30913752
-30913752

5515804
5515804

6. 
16626925

real    0m0.230s
user    0m0.425s
sys     0m0.001s

6061951

real    0m0.233s
user    0m0.437s
sys     0m0.002s

5995457

real    0m0.232s
user    0m0.437s
sys     0m0.001s

Average: 0.232s

7. 
real    0m3.829s
user    0m4.573s
sys     0m2.930s

real    0m3.844s
user    0m5.259s
sys     0m2.266s

real    0m4.201s
user    0m5.654s
sys     0m2.730s

Average: 3.958s
This is slower than the original racy program. 
8. 
20000000
0

real    0m0.130s
user    0m0.126s
sys     0m0.002s

20000000
0

real    0m0.129s
user    0m0.128s
sys     0m0.000s

20000000
0

real    0m0.128s
user    0m0.128s
sys     0m0.000s

Average: 0.129s

9. Locking and unlocking only once per function is much faster than doing it for each increment or even doing the racy program because there is no question
about which one should be processing at any given moment in time. 

10. If there are no shared variables and only function variables then that would be appropriate. 