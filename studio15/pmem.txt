1. Lorna Xiao
studio 15-a Physical memory

2. It doesn't work because the program assumes it is being loaded at 0x0  

3. 
movl	($0x1100),	%eax
movl	($0x1104),	%ebx
movl	%eax,		($0x1104)
movl	%ebx,		($0x1100)

4. 
1: 0x0, 0x4095
2: 0x4096, 0x8191
3: 0x8192, 0x12287
4: 0x12288, 0x16383

5. The 0x1234 is moved to memory address 0x26 and then the program will return an error because it cannot access memory address 0x50 because that is not within its destination range.

6. No it would not need to be rewritten because if loaded at 0x1000 and the limit being 0x1FFF, the program will run just fine at 0x1000 and 0x1004

7. 0x1234 will still be moved to memory address 0x26 and then the program will be able to successfully jump to mem address 0x50 because now it is in range based on its limit. The second program will not be able to jump to 0x50 because its base is at 0x1000 and limit is 0x1FFF 

8. see png image in folder

9. the machine cannot execute because there is not enough free consecutive space in memory that the program can access because when program A finishes, it leaves a hole of free space but program B is still executing in memory but it stays between 0x2000 and 0x2FFF and doesn't move down. So there is free memory at 0x3000 and 0x3FFF but that is not enough for program C nor is the space below B enough. Program C cannot split up but has to be consecutive in memory

10.  The program could be divided into pages and the memory could be divided into frames so the program C can be divided and run separately in memory.
